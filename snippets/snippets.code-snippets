
{
	"TODO": {
        "prefix": "todo",
        "body": [
            "// TODO ${1:bug}"
        ],
        "description": "todo"
    },
	"code block": {
        "prefix": "block",
        "body": [
            "{",
				"\t$1",	
			"}"
        ],
        "description": "region"
    },
	"// #region   // #endregion": {
        "prefix": "region",
        "body": [
            "// #region ${1}\n ${2}\n// #endregion"
        ],
        "description": "region"
    },
	"while () {}": {
		"prefix": "while",
		"body": [
		  "while ($1) {",
			  "\t$2",
		  "}"
		],
		"description": "while"
	},
	"while () { }": {
		"prefix": "wh",
		"body": [
		  "while ($1) {",
		 	 "\t$2",
		  "}"
		],
		"description": "while"
	},
	"loop {}": {
		"prefix": "loop",
		"body": [
		  "while ($1) {",
		 	 "\t$2",
		  "}"
		],
		"description": "while"
	},
	"for {}": {
		"prefix": "for",
		"body": [
		  "while ($1) {",
		 	 "\t$2",
		  "}"
		],
		"description": "while"
	},
	"if {}else {}": {
		"prefix": "ife",
		"body": [
		  "if ($1) {",
		 	 "\t$2",
		  "}else {",
		  	"\t$3",
		  "}"
		],
		"description": "if else"
	},
	"if {}else if {}": {
		"prefix": "ifeif",
		"body": [
		  "if ($1) {",
			  "\t$2",
		  "}else if ($3) {",
			  "\t$4",
		  "}"
		],
		"description": "if else if"
	},
	"if {}": {
		"prefix": "if",
		"body": [
		  "if ($1) {",
			"\t$2",
		  "}"
		],
		"description": "if {}"
	},
	//----------------------------------------------------------------------------------------------------------------
	"@using($1)": {
		"prefix": "using",
		"body": [
		  "@using($1)"
		],
		"description": "using"
	},
	"import $1": {
		"prefix": "import",
		"body": [
		  "import \"$1\""
		],
		"description": "import"
	},
	"let $1 = $2": {
		"prefix": "let",
		"body": [
		  "let $1 = $2"
		],
		"description": "let"
	},
	"let mut $1 = $2": {
		"prefix": "letm",
		"body": [
		  "let mut $1 = $2"
		],
		"description": "let mut"
	},
	"mut $1: $2": {
		"prefix": "mut",
		"body": [
		  "mut $1: $2"
		],
		"description": "mut"
	},

	"event $1($2)": {
		"prefix": "event",
		"body": [
		  "event $1($2)"
		],
		"description": "event"
	},
	"emit $1($2)": {
		"prefix": "emit",
		"body": [
		  "emit $1($2)"
		],
		"description": "emit"
	},
	//----------------------------------------------------------------------------------------------------------------
	"pub payable fn main() -> () {}": {
		"prefix": "main",
		"body": [
			"pub payable fn main() -> ${1:()} {",
				"\t$2",
			"}"
		],
		"description": "To create an main function"
	},
	"pub payable fn $1(arg: $2) -> $3": {
		"prefix": "fn",
		"body": [
			"pub payable fn $1(arg: $2) -> ($3) {",
				"\t$4",
				"\treturn $5",  
			"}"
		],
		"description": "To create an function"
	},
	"fn (arg: type) -> (type) {return}": {
		"prefix": "fnr",
		"body": [
			"pub fn $1(arg: $2) -> ($3) {",
				"\t$4",
				"\treturn $5",  
			"}"
		],
		"description": "To create an function"
	},
	"pub fn (arg: type) -> (type) {return}": {
		"prefix": "pubfn",
		"body": [
			"pub fn $1(arg: $2) -> ($3) {",
				"\t$4",
				"\treturn $5",  
			"}"
		],
		"description": "To create an function"
	},

	//----------------------------------------------------------------------------------------------------------------	
	"create an interface": {
		"prefix": "interface",
		"body": [
			"// To create an interface:",
			"Interface $1 {",
				"\tpub fn $2() -> ($3)",
				"\tpub fn $4() -> ($5)",
			"}"
		],
		"description": "To create an interface"
	},
	"create TxContract": {
		"prefix": "contract",
		"body": [
			"// create contract:",
			"Contract $1 {",
				"\tevent $2($3)",
				"\tpub fn $4() -> ($5)",
				"\tpub fn $6() -> ($7)",
			"}"
		],
		"description": "create Contract"
	},
	"create contract": {
		"prefix": "Contract",
		"body": [
			"// create contract:",
			"Contract $1 {",
			"\tevent $2($3)",
				"\tpub fn $4() -> ($5)",
				"\tpub fn $6() -> ($7)",
			"}"
		],
		"description": "create contract"
	},
	"create TxScript": {
		"prefix": "TxScript",
		"body": [
			"// invoke contract:",
			"TxScript $1 {",
				"\tpub payable fn main() -> () {",
					"\t\t$2",
				"\t}",
			"}"
		],
		"description": "create TxScript"
	},
	"create script": {
		"prefix": "script",
		"body": [
			"// invoke contract:",
			"TxScript $1 {",
			   "\tpub payable fn main() -> () {",
			   		"\t\t$2",
			   "\t}",
			"}"
		],
		"description": "create TxScript"
	},
	//----------------------------------------------------------------------------------------------------------------
	"create contract extends contract or interface": {
		"prefix": "extends",
		"body": [
			"// create contract:",
			"Contract $1 extends $2{",
				"\tevent $3($4)",
				"\tpub fn $5() -> ($6)",
				"\tpub fn $7() -> ($8)",
			"}"
		],
		"description": "create contract"
	}
}
